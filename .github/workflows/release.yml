name: Goreleaser

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  packages: write
  issues: write

jobs:
#  goreleaser:
#    name: "Go Releaser"
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - run: git fetch --force --tags
#      - uses: actions/setup-go@v3
#        with:
#          go-version: '>=1.19.3'
#          cache: true
#
#      - uses: goreleaser/goreleaser-action@v3
#        with:
#          distribution: goreleaser
#          version: latest
#          args: release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build-pub-linux:
    name: "Docker build and pub (linux)"
    runs-on: ubuntu-latest
#    needs: ['goreleaser']
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git fetch --force --tags
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.3'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            fastid/app
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64, linux/arm64, darwin/amd64, darwin/arm64
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
